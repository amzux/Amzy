#!/usr/bin/python3
# Dr.Amzker <amzker@protonmail.com>

import getopt
import os
import shutil
import sys
from pathlib import Path
from termcolor import colored
# TODO aapre colour print karvani chhe badha ni

url = "https://raw.githubusercontent.com/amzux/Amzux-repo/master/"
infopath = "/Amzy/list/"
dwpath = "/Amzy/download/"
unispath = "/Amzy/unis/"
inpath = "/Amzy/Installed/"


def help():
    print(
        """ 
	--h --help	     shows this msg
	--s --show	     show package information
				~Amzy --s packagename	
	--c --clean	     clean all downloaded packages,
	--r	--remove     remove perticular package
				~Amzy --r  packagename
	--i	--install    download and install package 
	--u	--update     update packageslist
	--m	--maintainer shows my name (of course):))
	--l	--list 		shows all installed packages
	
	--a	--allp		shows all packages avilible on repo
	"""
    )


def showf():
    try:
        f = open(infopath + pkg, "r")
        print(f.read())
        f.close()
    except  FileNotFoundError:
        print("No Package like that")


def check_aria2():
    if Path(pkg + ".Amzx.aria2").is_file():
        sys.exit("Amzy>>>File will resume when you start again")


# todo

def check_dir():
    if Path(pkg + ".Amzx").is_dir():
        os.system("sudo Amzy --c")

    if Path(inpath + pkg).exists():
        print(colored("You Have Already Installed " + pkg, 'blue'))
        vr = os.system("cat /Amzy/Installed/" + pkg)
        # TODO
        print(colored("LATEST:", 'blue'))
        lv = os.system("cat /Amzy/list/" + pkg + " | grep version")
        res = input("Do You want to install new?[Y/N]: ")
        if res == "Y":
            print("ok")
        else:
            sys.exit("Not installing new version")


def chkpkg():
    if not Path(infopath + pkg).is_file():
        sys.exit(colored("no package like that", 'red'))


def clean():
    shutil.rmtree(dwpath, ignore_errors=True)
    os.mkdir(dwpath)


#####def part over#####


if not os.geteuid() == 0:
    sys.exit(colored('run with sudo', 'red'))

########################
argumentList = sys.argv[1:]
options = "hscriumla:"
long_options = ["help", "show=", "clean", "remove=", "install=", "update", "maintainer", "list", "allp"]

try:
    arguments, values = getopt.getopt(argumentList, options, long_options)
    for currentArgument, currentValue in arguments:

        if currentArgument in ("-h", "--help"):
            help()

        elif currentArgument in ("--s", "--show"):
            pkg = "% s" % currentValue
            showf()

        elif currentArgument in ("--m", "--maintainer"):
            print(colored("Dr.Amzker <amzker@protonmail.com> , [Telegram] @amzker") , 'blue'), sys.argv[0]
        elif currentArgument in ("--l", "--list"):
            os.system("ls /Amzy/Installed/"), sys.argv[0]
        elif currentArgument in ("--a", "--allp"):
            os.system("ls " + infopath), sys.argv[0]
        elif currentArgument in ("--c", "--clean"):
            clean(), sys.argv[0]
        elif currentArgument in ("--i", "--install"):
            pkg = "% s" % currentValue
            chkpkg()
            os.chdir(dwpath)
            check_dir()
            # downloading
            dw = "aria2c " + url + "main/" + pkg + ".Amzx"
            os.system(dw)
            check_aria2()
            # now installing
            os.system("tar xf " + pkg + ".Amzx")
            os.chdir(pkg + ".Amzx")
            os.system("sh install.sh")
        elif currentArgument in ("--r", "--remove"):
            pkg = "% s" % currentValue
            os.chdir(unispath)
            print("unistallling " + pkg)
            os.system("sh " + pkg)
        elif currentArgument in ("--u", "--update"):
            print("Downloading packages list")
            shutil.rmtree("/Amzy/list/", ignore_errors=True)
            os.mkdir("/Amzy/list/")
            os.chdir("/Amzy/list/")
            dw = "aria2c " + url + "Packages/all.zip"
            os.system(dw)
            print("Downloaded & now extracting")
            os.system("unzip all.zip")
            os.system("rm -r all.zip")


except  getopt.error as err:
    print(str(err))
